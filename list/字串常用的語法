poem = '''All that doth flow we cannot liquid 
name Or else would fire and water be the same;
But that is liquid which is moist and wet 
Fire that property can never get. 
Then 'tis not cold that doth the fire put out 
But 'tis the wet that makes it die, no doubt.'''

print('印出字串13之前的文字\n',poem[:13],'\n字串的長度',len(poem))  
print(poem.startswith('But')) #starts with 以...開始,判斷片首是否為
print(poem.endswith('doubt.')) #ends with 以...結束,判斷片尾是否為
print(poem.find('that'))
print(poem.rfind('no'))   #rfind_從片尾搜尋
print(poem.count('tis'))  #count_字串出現在slice的數量
print('====================')

setup = 'a duck Goes into A bar...'
print(setup.strip('.'))   #strip_卸下
print(setup.capitalize()) #capitalize_把slice字首大寫
print(setup.title())      #將slice的字串的首字統一大寫
print(setup.upper())      #將slice統一大寫
print(setup.lower())      #將slice統一小寫
print(setup.swapcase())   #swap case 將slice的大小寫交換
print(setup.center(50))   #將slice置中在
print(setup.ljust(100))   #將slice靠左100字元,其餘空白
print(setup.rjust(100))   #將slice靠右100字元,空白
print(setup.replace('duck','horse'))    #replace_取代('被取代','取代為')


************************************************************

#語法:字串.find(要搜尋的字串, beg=0, end=len(string))
#字串可以搜尋特定內容的位置。
#搜尋的字串位置編號由 0 開始。
#字串.find(搜尋字串,起始位置,結束位置)
#搜尋時不包含結束位置。
#若搜尋不到則回傳 -1。**********************
#若沒有起始位置，也沒有結束位置，預設由 0 開始。
#若沒有結束位置，預設到最後一個字。

str1 = 'this is Python Tutorial, there'
search1 = 'Python' 
print(str1.find(search1))
#使用判斷範例
search2 = 'not'
print(str1.find(search2))       #搜尋不到回傳 -1
search3 = 't'
print(str1.find(search3))       #未設定,從0開始搜尋't'
print(str1.find(search3,4))     #從第4搜尋't'
print(str1.find(search3,11,20)) #在11~20搜尋't'





#example
#使用時機,不明確知道要執行幾次迴圈
#配合條件式if,並使用break停止迴圈
while(True):
    a = input('請輸入小寫英文字[按q會離開]:')
    if a == 'q':
        break
    print(a.capitalize()) #修改第一個字母為大寫
print('程式結束')
